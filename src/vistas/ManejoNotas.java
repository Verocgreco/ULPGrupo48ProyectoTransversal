/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.*;
import entidades.*;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arielvallejos
 */
public class ManejoNotas extends javax.swing.JInternalFrame {

    private Connection conn = null;
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int filas, int columnas) {
            if (columnas > 1) {   // LAS COLUMNAS MAYORES A 1 SON EDITABLES
                return true;
            } else {
                return false;    // MENORES A 1 NO SON EDITABLES
            }
        }
    };

    AlumnoData aluData = new AlumnoData();
    InscripcionData inscData = new InscripcionData();

    /**
     * Creates new form ManejoNotas
     */
    public ManejoNotas() {
        this.conn = Conexion.getConexion();

        initComponents();
        CargarCombo();
        cargarCabecera();
        CargarNotas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbAlumnos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();

        setClosable(true);
        setTitle("Manejo Notas");

        jLabel1.setFont(new java.awt.Font("Lucida Sans Typewriter", 3, 14)); // NOI18N
        jLabel1.setText("Carga Notas");

        jLabel2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jLabel2.setText("Seleccione Alumno ");

        jcbAlumnos.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jcbAlumnos.setAutoscrolls(true);
        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });

        jtTabla.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtTabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtTablaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtTabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed
        // TODO add your handling code here:
        modelo.setRowCount(0);
        Alumno alumnos = (Alumno) jcbAlumnos.getSelectedItem();
        for (Inscripcion insc : inscData.ObtenerInscripcionesPorAlumno(alumnos.getIdAlumno())) {
            modelo.addRow(new Object[]{insc.getMateria().getIdMateria(), insc.getMateria().getNombre(), insc.getNota()});
        }//FOR-EACH

    }//GEN-LAST:event_jcbAlumnosActionPerformed

    private void jtTablaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTablaKeyReleased
        // TODO add your handling code here:
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // CAPTURA EL EVENTO DE APRETAR EL ENTER
                double nota = Double.parseDouble((String) modelo.getValueAt(jtTabla.getSelectedRow(), 2));
                if (nota > 0 && nota <= 10) {
                Alumno alumnos = (Alumno) jcbAlumnos.getSelectedItem();
                int id = (int) modelo.getValueAt(jtTabla.getSelectedRow(), 0);

                inscData.ActualizarNota(nota, alumnos.getIdAlumno(), id);
                }else{
                     JOptionPane.showMessageDialog(this, "Ingrese una nota entre 0 y 10");
                }
            }
        } catch (NumberFormatException nf) {
            JOptionPane.showMessageDialog(this, "Ingrese numeros Pls");
        } catch (NullPointerException np) {
            JOptionPane.showMessageDialog(this, "Seleccione alumno y materia");
        } catch (ClassCastException cc) {
            JOptionPane.showMessageDialog(this, "Actualice en la tabla Dsp Boton");

        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "error al Recorrer");
        }//TRY-CATCH
    }//GEN-LAST:event_jtTablaKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables
int cf1;

    public void CargarCombo() {

        for (Alumno alumno : aluData.listarAlumnos()) {

            jcbAlumnos.addItem(alumno);
        }//FOR-EACH 
    }//METODO

    public void cargarCabecera() {
        modelo.addColumn("CODIGO");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("NOTA");
        jtTabla.setModel(modelo);
    }//METODO
    
    
    public void CargarNotas(){
    
            modelo.setRowCount(0);
        Alumno alumnos = (Alumno) jcbAlumnos.getItemAt(0);
        for (Inscripcion insc : inscData.ObtenerInscripcionesPorAlumno(alumnos.getIdAlumno())) {
            modelo.addRow(new Object[]{insc.getMateria().getIdMateria(), insc.getMateria().getNombre(), insc.getNota()});
        }//FOR-EACH
    }

}
