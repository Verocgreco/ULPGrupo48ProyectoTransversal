/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.Conexion;
import accesoADatos.MateriaData;
import entidades.Materia;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author arielvallejos
 */
public class FormularioMateria extends javax.swing.JInternalFrame {

    private Connection conn = null;
    MateriaData matData = new MateriaData();

    /**
     * Creates new form FormularioMateria
     */
    public FormularioMateria() {
        this.conn = Conexion.getConexion();
        initComponents();
        block();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gruupo2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtIdMat = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        jtAnio = new javax.swing.JTextField();
        jrbTrue = new javax.swing.JRadioButton();
        jrbFalse = new javax.swing.JRadioButton();
        jbBuscar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbAgregar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Form Materia");
        setName("Form Materia"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Sans Typewriter", 3, 14)); // NOI18N
        jLabel1.setText("MATERIA");

        jLabel2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jLabel2.setText("Codigo :");

        jLabel3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jLabel3.setText("Nombre :");

        jLabel4.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jLabel4.setText("AÃ±o :");

        jLabel5.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jLabel5.setText("Estado :");

        jtIdMat.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jtIdMat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtIdMatKeyReleased(evt);
            }
        });

        jtNombre.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtNombreKeyReleased(evt);
            }
        });

        jtAnio.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N

        gruupo2.add(jrbTrue);
        jrbTrue.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jrbTrue.setText("True");

        gruupo2.add(jrbFalse);
        jrbFalse.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jrbFalse.setText("False");

        jbBuscar.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbNuevo.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbEliminar.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbGuardar.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbAgregar.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jbAgregar.setText("Agregar");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(jbAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(jbGuardar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jrbTrue)
                                        .addGap(18, 18, 18)
                                        .addComponent(jrbFalse))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jtIdMat)
                                    .addComponent(jtNombre)
                                    .addComponent(jtAnio))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbEliminar)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtIdMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jrbTrue)
                    .addComponent(jrbFalse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo)
                    .addComponent(jbGuardar)
                    .addComponent(jbAgregar)
                    .addComponent(jbEliminar))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        if (!jtIdMat.getText().isEmpty()) {
            try {
                Materia matEnc = matData.BuscarMateria(Integer.parseInt(jtIdMat.getText()));

                if (Integer.parseInt(jtIdMat.getText()) == matEnc.getIdMateria()) {

                    jtNombre.setText(matEnc.getNombre());
                    jtAnio.setText(matEnc.getAnioMateria() + "");

                    if (matEnc.isEstado() == true) {
                        jrbTrue.setSelected(true);
                    } else {
                        jrbFalse.setSelected(true);
                    }//IF-ELSE
                    BuscarDisblock();

                }
//               }else if (){

            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(this, "Materia no encontrada");
            } catch (NumberFormatException nf) {
                JOptionPane.showMessageDialog(this, "CÃ³digo incorrecto");
            }//TRY-CATCH
        } else {
            JOptionPane.showMessageDialog(this, "Complete campo de cÃ³digo");
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        // TODO add your handling code here:
        if (!jtNombre.getText().isEmpty() && !jtAnio.getText().isEmpty() && (jrbTrue.isSelected() == true
                || jrbFalse.isSelected() == true)) {
            try {
                int anio = Integer.parseInt(jtAnio.getText());
                if (anio > 0) {
                    Materia materia = new Materia();
//            materia.setIdMateria(Integer.parseInt(jtIdMat.getText()));
                    materia.setNombre(jtNombre.getText());
                    materia.setAnioMateria(Integer.parseInt(jtAnio.getText()));
                    if (jrbTrue.isSelected()) {
                        materia.setEstado(true);
                    } else if (jrbFalse.isSelected()) {
                        materia.setEstado(false);
                    }//IF-ELSE
                    matData.guardarMateria(materia);
                    LimpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Debe ingresar un aÃ±o vÃ¡lido");
                }
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(this, "Error no encontrado");
            } catch (NumberFormatException nf) {
                JOptionPane.showMessageDialog(this, "El campo aÃ±o debe ser numÃ©rico");
            }//TRY-CATCH
        } else {
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos");
        }
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        if (!jtNombre.getText().isEmpty() && !jtAnio.getText().isEmpty() && (jrbTrue.isSelected() == true
                || jrbFalse.isSelected() == true)) {
            try {
                if (!jtIdMat.getText().isEmpty()) {
                    int anio = Integer.parseInt(jtAnio.getText());
                    if (anio > 0) {
//                    for(Materia mat:matData.ListarMateria()){
                        Materia mat = matData.BuscarMateria(Integer.parseInt(jtIdMat.getText()));
                        mat.setNombre(jtNombre.getText());
                        mat.setAnioMateria(Integer.parseInt(jtAnio.getText()));
                        if (jrbTrue.isSelected()) {
                            mat.setEstado(true);
                        } else if (jrbFalse.isSelected()) {
                            mat.setEstado(false);
                        }
                        matData.ModificarMateria(mat);
                        //LimpiarCampos();
                        // block();
                    } else {
                        JOptionPane.showMessageDialog(this, "Debe ingresar un aÃ±o vÃ¡lido");
                    }
//                    }//FOR EACH
                }//IF isEmpty
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(this, "Error no encotrado");

            } catch (NumberFormatException nf) {
                JOptionPane.showMessageDialog(this, "Ingrese numeros Pls");
            }//TRY-CATCH
        } else {
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos");
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
        for (Materia mat : matData.ListarMateria()) {
            if (mat.getIdMateria() == Integer.parseInt(jtIdMat.getText())) {
                matData.EliminarMateria(mat.getIdMateria());
                break;
            }//IF

        }//FOR EACH
        actualizarMatEliminada();
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jtIdMatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIdMatKeyReleased
        // TODO add your handling code here:
        if (!jtIdMat.getText().isEmpty()) {

            IdMatBlock();

        } else if (jtIdMat.getText().isEmpty()) {

            block();
        }
    }//GEN-LAST:event_jtIdMatKeyReleased

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
        LimpiarCampos();
        block();
        jtIdMat.setEnabled(true);
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyReleased
        // TODO add your handling code here:
        if (!jtNombre.getText().isEmpty() && jtIdMat.getText().isEmpty()) {
            NombreDisblock();
        } else if (jtNombre.getText().isEmpty() && !jtIdMat.getText().isEmpty()) {
            BuscarDisblock();
            jbNuevo.setEnabled(true);
        } else if (jtNombre.getText().isEmpty()) {
            block();
        }
    }//GEN-LAST:event_jtNombreKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup gruupo2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JRadioButton jrbFalse;
    private javax.swing.JRadioButton jrbTrue;
    private javax.swing.JTextField jtAnio;
    private javax.swing.JTextField jtIdMat;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables

    public void block() {

        jtNombre.setEnabled(true);
        jrbTrue.setEnabled(false);
        jrbFalse.setEnabled(false);
        jtAnio.setEnabled(false);
        jbGuardar.setEnabled(false);
        jbAgregar.setEnabled(false);
        jbEliminar.setEnabled(false);
        jbNuevo.setEnabled(false);
        jbBuscar.setEnabled(true);
        jtIdMat.setEnabled(true);
    }

    public void disblock() {

        jtNombre.setEnabled(true);
        jrbTrue.setEnabled(true);
        jrbFalse.setEnabled(true);
        jtAnio.setEnabled(true);
        jbAgregar.setEnabled(true);
        ;

    }

    public void BuscarDisblock() {
        jtNombre.setEnabled(true);
        jrbTrue.setEnabled(true);
        jrbFalse.setEnabled(false);
        jtAnio.setEnabled(true);
        jbGuardar.setEnabled(true);
        jbAgregar.setEnabled(false);
        jbEliminar.setEnabled(true);
        jbNuevo.setEnabled(true);
        jtIdMat.setEnabled(false);
        jbBuscar.setEnabled(false);
    }

    public void NombreDisblock() {
        jtNombre.setEnabled(true);
        jrbTrue.setEnabled(true);
        jrbFalse.setEnabled(false);
        jtAnio.setEnabled(true);
        jbGuardar.setEnabled(false);
        jbAgregar.setEnabled(true);
        jbEliminar.setEnabled(false);
        jbNuevo.setEnabled(true);
        jtIdMat.setEnabled(false);
        jbBuscar.setEnabled(false);
    }

    public void IdMatBlock() {
        jtNombre.setEnabled(false);
        jrbTrue.setEnabled(false);
        jrbFalse.setEnabled(false);
        jtAnio.setEnabled(false);
        jbGuardar.setEnabled(false);
        jbAgregar.setEnabled(false);
        jbEliminar.setEnabled(false);
        jbNuevo.setEnabled(true);
        jbBuscar.setEnabled(true);
        jtIdMat.setEnabled(true);
    }

    public void LimpiarCampos() {
        jtIdMat.setText("");
        jtNombre.setText("");
        jtAnio.setText("");
        gruupo2.clearSelection();

    }

    public void actualizarMatEliminada() {
        Materia matEnc = matData.BuscarMateria(Integer.parseInt(jtIdMat.getText()));

        if (Integer.parseInt(jtIdMat.getText()) == matEnc.getIdMateria()) {

            jtNombre.setText(matEnc.getNombre());
            jtAnio.setText(matEnc.getAnioMateria() + "");

            if (matEnc.isEstado() == true) {
                jrbTrue.setSelected(true);
            } else {
                jrbFalse.setSelected(true);
            }//IF-ELSE
            BuscarDisblock();
        }
    }
}
