/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.*;
import entidades.*;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arielvallejos
 */
public class ManejoInscripciones extends javax.swing.JInternalFrame {
private Connection conn=null;
private DefaultTableModel modelo =new DefaultTableModel(){
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;
    }
};

AlumnoData aluData = new AlumnoData();
MateriaData matData = new MateriaData();
InscripcionData inscData = new InscripcionData();
    /**
     * Creates new form ManejoInscripciones
     */
    public ManejoInscripciones() {
        this.conn=Conexion.getConexion();
        initComponents();
        CargarCombo();
        CargarCabecera();
        matInsc();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoMats = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jcbAlumnos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jrbMa_insc = new javax.swing.JRadioButton();
        jrbMa_No = new javax.swing.JRadioButton();
        jbInscribir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setTitle("Form Inscripcion");

        jLabel1.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jLabel1.setText("Seleccione un Alumno");

        jcbAlumnos.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jcbAlumnos.setToolTipText("Selec");
        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });

        jtTabla.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 12)); // NOI18N
        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTabla.setFocusable(false);
        jScrollPane1.setViewportView(jtTabla);

        jLabel2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jLabel2.setText("Listado de MATERIAS");

        GrupoMats.add(jrbMa_insc);
        jrbMa_insc.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jrbMa_insc.setSelected(true);
        jrbMa_insc.setText("Materias Inscriptas");
        jrbMa_insc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMa_inscActionPerformed(evt);
            }
        });

        GrupoMats.add(jrbMa_No);
        jrbMa_No.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jrbMa_No.setText("Materias No Inscriptas");
        jrbMa_No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMa_NoActionPerformed(evt);
            }
        });

        jbInscribir.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jbInscribir.setText("Inscribir");
        jbInscribir.setEnabled(false);
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnular.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jbAnular.setText("Anular Inscripcion");
        jbAnular.setEnabled(false);
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Sans Typewriter", 3, 14)); // NOI18N
        jLabel3.setText("INSCRIPCIONES");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrbMa_insc)
                                .addGap(106, 106, 106)
                                .addComponent(jrbMa_No))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(82, 82, 82))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbInscribir)
                        .addGap(81, 81, 81)
                        .addComponent(jbAnular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(39, 39, 39))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbMa_insc)
                    .addComponent(jrbMa_No))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAnular)
                    .addComponent(jbInscribir)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed
////        // TODO add your handling code here:
//
//              modelo.setRowCount(0);
//         Alumno alumnos=(Alumno)jcbAlumnos.getSelectedItem();
//            if(jcbAlumnos.getSelectedIndex()>=0){
//            modelo.setRowCount(0);
//            for(Materia mats:inscData.ObtenerMateriasNoCursadas(alumnos.getIdAlumno())){
//            modelo.addRow(new Object[]{mats.getIdMateria(),mats.getNombre(),mats.getAnioMateria()});
//            
//            }//FOR-EACH
//           jbInscribir.setEnabled(true);
//           jbAnular.setEnabled(false);
//        }      else  if(jcbAlumnos.getSelectedIndex()>=0){
//            modelo.setRowCount(0);
//        for(Materia mats:inscData.ObtenerMateriasCursadas(alumnos.getIdAlumno())){
//        
//            modelo.addRow(new Object[]{mats.getIdMateria(),mats.getNombre(),mats.getAnioMateria()});
//           
//        }//FOR-EACH
//        jbAnular.setEnabled(true);
//        jbInscribir.setEnabled(false);
//      
//
//        }
////ELSE-IF
              modelo.setRowCount(0);
         Alumno alumnos=(Alumno)jcbAlumnos.getSelectedItem();
           if( jrbMa_No.isSelected()){
            modelo.setRowCount(0);
            for(Materia mats:inscData.ObtenerMateriasNoCursadas(alumnos.getIdAlumno())){
            modelo.addRow(new Object[]{mats.getIdMateria(),mats.getNombre(),mats.getAnioMateria()});
            
            }//FOR-EACH
           jbInscribir.setEnabled(true);
           jbAnular.setEnabled(false);
        }else if(jrbMa_insc.isSelected()){        
                
                    modelo.setRowCount(0);
        
        for(Materia mats:inscData.ObtenerMateriasCursadas(alumnos.getIdAlumno())){
        
            modelo.addRow(new Object[]{mats.getIdMateria(),mats.getNombre(),mats.getAnioMateria()});
           
        }//FOR-EACH
        jbAnular.setEnabled(true);
        jbInscribir.setEnabled(false);
      


        }



    }//GEN-LAST:event_jcbAlumnosActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        // TODO add your handling code here:
        try{
        
        Alumno alumnos=(Alumno)jcbAlumnos.getSelectedItem();     
        
       int fs=(int) modelo.getValueAt(jtTabla.getSelectedRow(), 0);
       
       Inscripcion insc = new Inscripcion();
       Alumno al  = aluData.BuscarAlumnoPorId(alumnos.getIdAlumno());
       insc.setAlumno(al);
       Materia ma=matData.BuscarMateria(fs);
       insc.setMateria(ma);
       inscData.guardarInscripcion(insc);
          matNoInsc();
        }catch(ArrayIndexOutOfBoundsException e){
          JOptionPane.showMessageDialog(this,"Selecione una materia");  
        }
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
      try{
        Alumno alumnos=(Alumno)jcbAlumnos.getSelectedItem();
       int fs=(int) modelo.getValueAt(jtTabla.getSelectedRow(), 0);
        inscData.BorrarInscMateriaAlumno(alumnos.getIdAlumno(), fs);
            matInsc();
      }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this,"Selecione una materia");
        }//TRY-CATCH
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jrbMa_NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMa_NoActionPerformed
        // TODO add your handling code here:
              modelo.setRowCount(0);
         Alumno alumnos=(Alumno)jcbAlumnos.getSelectedItem();
           if( jrbMa_No.isSelected()){
            
            for(Materia mats:inscData.ObtenerMateriasNoCursadas(alumnos.getIdAlumno())){
            modelo.addRow(new Object[]{mats.getIdMateria(),mats.getNombre(),mats.getAnioMateria()});
            
            }//FOR-EACH
        
           jbInscribir.setEnabled(true);
           jbAnular.setEnabled(false);
        }//ELSE-IF
//            
    }//GEN-LAST:event_jrbMa_NoActionPerformed

    private void jrbMa_inscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMa_inscActionPerformed
        // TODO add your handling code here:
                modelo.setRowCount(0);
        Alumno alumnos=(Alumno)jcbAlumnos.getSelectedItem();
        if(jrbMa_insc.isSelected()){
        for(Materia mats:inscData.ObtenerMateriasCursadas(alumnos.getIdAlumno())){
        
            modelo.addRow(new Object[]{mats.getIdMateria(),mats.getNombre(),mats.getAnioMateria()});
           
        }//FOR-EACH
        jbAnular.setEnabled(true);
        jbInscribir.setEnabled(false);
//      
//
        }
    }//GEN-LAST:event_jrbMa_inscActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoMats;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JRadioButton jrbMa_No;
    private javax.swing.JRadioButton jrbMa_insc;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables


public void CargarCombo(){
    
  
for(Alumno alumno : aluData.listarAlumnos()){
    
    jcbAlumnos.addItem(alumno);
    }//FOR-EACH
}//METODO

public void CargarCabecera(){
modelo.addColumn("ID");
modelo.addColumn("NOMBRE");
modelo.addColumn("AÑO");
jtTabla.setModel(modelo);

}//METODO


public void matInsc(){

                modelo.setRowCount(0);
        Alumno alumnos=(Alumno)jcbAlumnos.getSelectedItem();
        if(jrbMa_insc.isSelected()){
        for(Materia mats:inscData.ObtenerMateriasCursadas(alumnos.getIdAlumno())){
        
            modelo.addRow(new Object[]{mats.getIdMateria(),mats.getNombre(),mats.getAnioMateria()});
           
        }//FOR-EACH
        jbAnular.setEnabled(true);
        jbInscribir.setEnabled(false);
//      
//
        }

}

public void matNoInsc(){
              
         Alumno alumnos=(Alumno)jcbAlumnos.getSelectedItem();
           if( jrbMa_No.isSelected()){
            modelo.setRowCount(0);
            for(Materia mats:inscData.ObtenerMateriasNoCursadas(alumnos.getIdAlumno())){
            modelo.addRow(new Object[]{mats.getIdMateria(),mats.getNombre(),mats.getAnioMateria()});
            
            }//FOR-EACH
          
           jbInscribir.setEnabled(true);
           jbAnular.setEnabled(false);
        }//ELSE-IF

}

}
